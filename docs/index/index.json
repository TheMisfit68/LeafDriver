{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/accontroller\/aircoisrunning","title":"var aircoIsRunning: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/accontroller\/getaircostatus()","title":"func getAirCoStatus()","type":"method"},{"path":"\/documentation\/leafdriver\/accontroller\/setairco(to:)","title":"func setAirCo(to: ACController.airCoState)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/accontroller\/aircostate\/off","title":"case off","type":"case"},{"path":"\/documentation\/leafdriver\/accontroller\/aircostate\/on","title":"case on","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/accontroller\/aircostate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/accontroller\/aircostate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/accontroller\/aircostate","title":"ACController.airCoState","type":"enum"}],"path":"\/documentation\/leafdriver\/accontroller","title":"ACController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/batterychecker\/chargingstatus","title":"var chargingStatus: Bool?","type":"property"},{"path":"\/documentation\/leafdriver\/batterychecker\/connectionstatus","title":"var connectionStatus: Bool?","type":"property"},{"path":"\/documentation\/leafdriver\/batterychecker\/percentageremaining","title":"var percentageRemaining: Int?","type":"property"},{"path":"\/documentation\/leafdriver\/batterychecker\/rangeremaining","title":"var rangeRemaining: Int?","type":"property"},{"path":"\/documentation\/leafdriver\/batterychecker\/statustargetdate","title":"var statusTargetDate: Date?","type":"property"},{"path":"\/documentation\/leafdriver\/batterychecker\/updatetimestamp","title":"var updateTimeStamp: Date?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/batterychecker\/getnewbatterystatus()","title":"func getNewBatteryStatus()","type":"method"},{"path":"\/documentation\/leafdriver\/batterychecker\/sendbatteryupdaterequest()","title":"func sendBatteryUpdateRequest()","type":"method"}],"path":"\/documentation\/leafdriver\/batterychecker","title":"BatteryChecker","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/charger\/chargingwasexecuted","title":"var chargingWasExecuted: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/charger\/startcharging()","title":"func startCharging()","type":"method"}],"path":"\/documentation\/leafdriver\/charger","title":"Charger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/init(leafprotocol:)","title":"init(leafProtocol: any LeafProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/accontroller","title":"var acController: ACController!","type":"property"},{"path":"\/documentation\/leafdriver\/leafdriver\/batterychecker","title":"var batteryChecker: BatteryChecker!","type":"property"},{"path":"\/documentation\/leafdriver\/leafdriver\/charger","title":"var charger: Charger!","type":"property"},{"path":"\/documentation\/leafdriver\/leafdriver\/commandqueue","title":"var commandQueue: FIFO<LeafDriver.LeafCommandMethodPair>","type":"property"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.property","title":"var connectionState: LeafDriver.ConnectionState","type":"property"},{"path":"\/documentation\/leafdriver\/leafdriver\/notificationkey","title":"let notificationKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/reloadsettings()","title":"func reloadSettings()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/anyleafmethod","title":"LeafDriver.AnyLeafMethod","type":"typealias"},{"path":"\/documentation\/leafdriver\/leafdriver\/leafapi","title":"LeafDriver.LeafAPI","type":"typealias"},{"path":"\/documentation\/leafdriver\/leafdriver\/leafcommandmethodpair","title":"LeafDriver.LeafCommandMethodPair","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/_(_:_:)-6dgjd","title":"static func < (LeafDriver.ConnectionState, LeafDriver.ConnectionState) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/disconnected","title":"case disconnected","type":"case"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/loggedin","title":"case loggedIn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/'...(_:)-6pqbh","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/'...(_:)-7la1y","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/_(_:_:)-756ga","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/_=(_:_:)-7a0q","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/_=(_:_:)-utaf","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/copylimitedbetween(_:)","title":"func copyLimitedBetween(ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/limitbetween(_:)","title":"func limitBetween(ClosedRange<Self>)","type":"method"}],"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/leafdriver\/connectionstate-swift.enum","title":"LeafDriver.ConnectionState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/observenotifications()","title":"func observeNotifications()","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/observenotifications(using:)","title":"func observeNotifications(using: () -> Void)","type":"method"}],"path":"\/documentation\/leafdriver\/leafdriver\/configurable-implementations","title":"Configurable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/logger","title":"static var logger: Logger","type":"property"}],"path":"\/documentation\/leafdriver\/leafdriver\/loggable-implementations","title":"Loggable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafdriver\/internetcredentialsfromkeychain(name:location:)","title":"func internetCredentialsFromKeyChain(name: String, location: String) -> (server: String, port: Int?, account: String, password: String)?","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/servercredentialsfromkeychain(name:location:)","title":"func serverCredentialsFromKeyChain(name: String, location: String) -> (server: String, port: Int?, account: String, password: String)?","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/storeinternetcredentialsinkeychain(name:serverandport:location:account:password:extrainfo:)","title":"func storeInternetCredentialsInKeyChain(name: String, serverAndPort: (String, Int?), location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/storeservercredentialsinkeychain(name:serverandport:location:account:password:extrainfo:)","title":"func storeServerCredentialsInKeyChain(name: String, serverAndPort: (String, Int?), location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/storetokeninkeychain(name:location:account:token:extrainfo:)","title":"func storeTokenInKeyChain(name: String, location: String, account: String, token: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/storeusercredentialsinkeychain(name:location:account:password:extrainfo:)","title":"func storeUserCredentialsInKeyChain(name: String, location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/tokenfromkeychain(name:location:)","title":"func tokenFromKeyChain(name: String, location: String) -> String?","type":"method"},{"path":"\/documentation\/leafdriver\/leafdriver\/usercredentialsfromkeychain(name:location:)","title":"func userCredentialsFromKeyChain(name: String, location: String) -> (account: String, password: String)?","type":"method"}],"path":"\/documentation\/leafdriver\/leafdriver\/securable-implementations","title":"Securable Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/leafdriver","title":"LeafDriver","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafprotocol\/baseurl","title":"var baseURL: String","type":"property"},{"path":"\/documentation\/leafdriver\/leafprotocol\/initialappstring","title":"var initialAppString: String","type":"property"},{"path":"\/documentation\/leafdriver\/leafprotocol\/version","title":"var version: Int","type":"property"}],"path":"\/documentation\/leafdriver\/leafprotocol","title":"LeafProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafprotocolv2\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafprotocolv2\/baseurl","title":"let baseURL: String","type":"property"},{"path":"\/documentation\/leafdriver\/leafprotocolv2\/initialappstring","title":"var initialAppString: String","type":"property"},{"path":"\/documentation\/leafdriver\/leafprotocolv2\/version","title":"var version: Int","type":"property"}],"path":"\/documentation\/leafdriver\/leafprotocolv2","title":"LeafProtocolV2","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/notificationkey","title":"let notificationKey: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/internetcredentialsfromkeychain(name:location:)","title":"func internetCredentialsFromKeyChain(name: String, location: String) -> (server: String, port: Int?, account: String, password: String)?","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/servercredentialsfromkeychain(name:location:)","title":"func serverCredentialsFromKeyChain(name: String, location: String) -> (server: String, port: Int?, account: String, password: String)?","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/storeinternetcredentialsinkeychain(name:serverandport:location:account:password:extrainfo:)","title":"func storeInternetCredentialsInKeyChain(name: String, serverAndPort: (String, Int?), location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/storeservercredentialsinkeychain(name:serverandport:location:account:password:extrainfo:)","title":"func storeServerCredentialsInKeyChain(name: String, serverAndPort: (String, Int?), location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/storetokeninkeychain(name:location:account:token:extrainfo:)","title":"func storeTokenInKeyChain(name: String, location: String, account: String, token: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/storeusercredentialsinkeychain(name:location:account:password:extrainfo:)","title":"func storeUserCredentialsInKeyChain(name: String, location: String, account: String, password: String, extraInfo: [KeychainAttribute : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tokenfromkeychain(name:location:)","title":"func tokenFromKeyChain(name: String, location: String) -> String?","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/usercredentialsfromkeychain(name:location:)","title":"func userCredentialsFromKeyChain(name: String, location: String) -> (account: String, password: String)?","type":"method"}],"path":"\/documentation\/leafdriver\/leafsettingsview\/securable-implementations","title":"Securable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/postnotification()","title":"func postNotification()","type":"method"}],"path":"\/documentation\/leafdriver\/leafsettingsview\/settingsview-implementations","title":"SettingsView Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(activationpoint:)-2853g","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(activationpoint:)-5b440","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaction(named:_:)-4imxg","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaction(named:_:)-7u8ye","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaction(named:_:)-9qs7i","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityactivationpoint(_:)-2u32d","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityactivationpoint(_:)-5yncb","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-11m6i","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-1r0ao","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-2mub9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-34099","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-5x65e","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-6dko2","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-8rubi","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitycustomcontent(_:_:importance:)-x710","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityhint(_:)-19suj","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityhint(_:)-5kuof","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityhint(_:)-9rrbx","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityinputlabels(_:)-6a620","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityinputlabels(_:)-8bpoy","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityinputlabels(_:)-9nfba","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitylabel(_:)-32rv","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitylabel(_:)-343en","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitylabel(_:)-u0yw","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:)-4asqa","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:)-50gwy","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:)-7z5wa","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:)-80tpg","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-31rhq","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8esjl","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8g2sl","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-mem1","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entrylabel:)-1ikv7","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entrylabel:)-21vrp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entrylabel:)-47xyf","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:entries:entrylabel:)-4p0ev","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:textranges:)-1hbd6","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:textranges:)-5alnf","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:textranges:)-7lkjs","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotor(_:textranges:)-7q43k","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityvalue(_:)-495z0","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityvalue(_:)-7sxqw","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityvalue(_:)-8qdpc","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:)-3kx3v","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:)-46dop","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:)-7pzg0","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:message:)-5s6he","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:message:)-803xq","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:actions:message:)-8f2yt","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:)-29tuq","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:)-2epiq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:)-8ai9h","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:message:)-5kjn3","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:message:)-6sbqw","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(_:ispresented:presenting:actions:message:)-gvm6","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alignmentguide(_:computevalue:)-3aee4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alignmentguide(_:computevalue:)-5idei","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/aspectratio(_:contentmode:)-90ojc","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/aspectratio(_:contentmode:)-9v0u1","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(_:in:fillstyle:)-4ec9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(_:in:fillstyle:)-6i5j1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(in:fillstyle:)-5l215","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/background(in:fillstyle:)-6va0x","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/badge(_:)-5e04w","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/badge(_:)-6aht7","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/badge(_:)-70fov","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/badge(_:)-8tx4","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/buttonstyle(_:)-2x9ze","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/buttonstyle(_:)-7sx9q","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-80q8w","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9534a","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9es92","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6e0hu","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zz19","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-95mt9","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4sgy2","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5x47f","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8rv1p","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1xktu","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-26to2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-61u6r","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contentmargins(_:_:for:)-70w1q","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contentmargins(_:_:for:)-7aeq6","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-4z0sv","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-8vm6p","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-92ovv","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogconfirmationlabel(_:)-8lhav","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogconfirmationlabel(_:)-8s1vc","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogconfirmationlabel(_:)-a9b6","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogmessage(_:)-1by43","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogmessage(_:)-5ff0r","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogmessage(_:)-75afg","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-58prh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7wlpl","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1is7k","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-59p9t","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2f1lx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9020x","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-59qib","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-871h4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporterfilenamelabel(_:)-29oou","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporterfilenamelabel(_:)-2fwkb","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileexporterfilenamelabel(_:)-tkhj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedobject(_:)-27vxo","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedobject(_:)-zbak","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedsceneobject(_:)-18vgr","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedsceneobject(_:)-9yf0x","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedscenevalue(_:_:)-3o9hb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedscenevalue(_:_:)-sqrq","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedvalue(_:_:)-1237y","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/focusedvalue(_:_:)-6v4c","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/help(_:)-74d4m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/help(_:)-8gw9a","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/help(_:)-9xvxu","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyboardshortcut(_:)-12dkg","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyboardshortcut(_:)-7icyw","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linelimit(_:)-1n30","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linelimit(_:)-2w8qw","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linelimit(_:)-8qp5h","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linelimit(_:)-9kgmb","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listitemtint(_:)-1ww8k","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listitemtint(_:)-3r2f8","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:)-13zrf","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:)-5px3e","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:)-7ehra","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:displaymode:)-1uuj2","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:displaymode:)-21ki7","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationbartitle(_:displaymode:)-25bk1","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdocument(_:preview:)-2207o","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdocument(_:preview:)-39svb","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdocument(_:preview:)-8380d","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationdocument(_:preview:)-c2sa","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsubtitle(_:)-196ze","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsubtitle(_:)-2t7n","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationsubtitle(_:)-8vtgi","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationtitle(_:)-2l03c","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationtitle(_:)-59ngt","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationtitle(_:)-5skp4","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationtitle(_:)-5wahw","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationtitle(_:)-87jzv","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onchange(of:initial:_:)-1ltjj","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onchange(of:initial:_:)-9wvc6","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:delegate:)-2zh76","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:delegate:)-3v8lj","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:istargeted:perform:)-1f44h","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:istargeted:perform:)-4zk8h","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:istargeted:perform:)-7bihi","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/ondrop(of:istargeted:perform:)-dtah","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onpastecommand(of:perform:)-33vpk","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/onpastecommand(of:perform:)-3m12l","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onpastecommand(of:validator:perform:)-30nzv","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/onpastecommand(of:validator:perform:)-3lf8t","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/padding(_:)-2hlw4","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/padding(_:)-6mhqf","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/renameaction(_:)-1ifn6","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/renameaction(_:)-2mep4","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/safeareainset(edge:alignment:spacing:content:)-4vhev","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/safeareainset(edge:alignment:spacing:content:)-652e8","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/safeareapadding(_:)-11bcc","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/safeareapadding(_:)-6sod5","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scaleeffect(_:anchor:)-1ylz6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scaleeffect(_:anchor:)-98jtj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4dpcj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4l8d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-82gax","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-344iu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-4klzn","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-66i4k","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:ispresented:placement:prompt:)-40sdt","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:ispresented:placement:prompt:)-4m36m","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:ispresented:placement:prompt:)-gjg8","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:)-1ccu4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:)-7x74p","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:)-7zipm","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:suggestions:)-2rywq","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:suggestions:)-63jls","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:placement:prompt:suggestions:)-6aywx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5lsml","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9cj73","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9ongt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:placement:prompt:token:)-183ip","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:placement:prompt:token:)-77kgt","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:placement:prompt:token:)-xj68","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-224q2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-44o7a","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8naag","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1bb4v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2ctam","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-d3fc","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbar(content:)-13wb","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbar(content:)-41bd7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/typeselectequivalent(_:)-1tmrw","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/typeselectequivalent(_:)-62dkv","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/typeselectequivalent(_:)-9yvsf","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/typesettinglanguage(_:isenabled:)-5jt0k","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/typesettinglanguage(_:isenabled:)-6048z","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/leafdriver\/leafsettingsview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/leafdriver\/leafsettingsview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/leafsettingsview","title":"LeafSettingsView","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/american","title":"case american","type":"case"},{"path":"\/documentation\/leafdriver\/language\/dutch","title":"case dutch","type":"case"},{"path":"\/documentation\/leafdriver\/language\/flemish","title":"case flemish","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/language\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/leafdriver\/language\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/language\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/leafdriver\/language\/stringrepresentableenum-implementations","title":"StringRepresentableEnum Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/language","title":"Language","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/aircooffrequest","title":"case airCoOffRequest","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/aircoonrequest","title":"case airCoOnRequest","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/aircostatus","title":"case airCoStatus","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/aircoupdate","title":"case airCoUpdate","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/batterystatus","title":"case batteryStatus","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/batteryupdaterequest","title":"case batteryUpdateRequest","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/batteryupdateresponse","title":"case batteryUpdateResponse","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/login","title":"case login","type":"case"},{"path":"\/documentation\/leafdriver\/leafcommand\/startcharging","title":"case startCharging","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/leafcommand\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/leafdriver\/leafcommand\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/leafcommand\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/leafdriver\/leafcommand\/stringrepresentableenum-implementations","title":"StringRepresentableEnum Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/leafcommand","title":"LeafCommand","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/australia","title":"case australia","type":"case"},{"path":"\/documentation\/leafdriver\/region\/canada","title":"case canada","type":"case"},{"path":"\/documentation\/leafdriver\/region\/europe","title":"case europe","type":"case"},{"path":"\/documentation\/leafdriver\/region\/japan","title":"case japan","type":"case"},{"path":"\/documentation\/leafdriver\/region\/usa","title":"case usa","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/region\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/leafdriver\/region\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/region\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/leafdriver\/region\/stringrepresentableenum-implementations","title":"StringRepresentableEnum Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/region","title":"Region","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/brussels","title":"case brussels","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/leafdriver\/timezone\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/leafdriver\/timezone\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/leafdriver\/timezone\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/leafdriver\/timezone\/stringrepresentableenum-implementations","title":"StringRepresentableEnum Implementations","type":"symbol"}],"path":"\/documentation\/leafdriver\/timezone","title":"TimeZone","type":"enum"}],"icon":"NissanLogo.svg","path":"\/documentation\/leafdriver","title":"LeafDriver","type":"module"}]},"references":{"NissanLogo.svg":{"alt":"The Nissan logo","identifier":"NissanLogo.svg","type":"image","variants":[{"traits":["3x","light"],"url":"\/images\/NissanLogo@3x.svg"}]}},"schemaVersion":{"major":0,"minor":1,"patch":1}}